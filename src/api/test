 // const change = selection.change;
  // const changeMultiAssets = change.multiasset();
  // // hard coded for now. about 300 assets fit into a single output
  // if (changeMultiAssets && (await valueLength(changeMultiAssets)) >= 300) {
  //   const partialChange = Loader.Cardano.Value.new(
  //     Loader.Cardano.BigNum.from_str('0')
  //   );

  //   const splitValue = () => {
  //     const partialMultiAssets = Loader.Cardano.MultiAsset.new();
  //     let count = 0;
  //     const policies = changeMultiAssets.keys();
  //     for (let j = 0; j < changeMultiAssets.len(); j++) {
  //       const policy = policies.get(j);
  //       const policyAssets = changeMultiAssets.get(policy);
  //       const assetNames = policyAssets.keys();
  //       const assets = Loader.Cardano.Assets.new();
  //       for (let k = 0; k < assetNames.len(); k++) {
  //         const policyAsset = assetNames.get(k);
  //         const quantity = policyAssets.get(policyAsset);
  //         assets.insert(policyAsset, quantity);
  //         count++;
  //         if (count >= 300) {
  //           partialMultiAssets.insert(policy, assets);
  //           return;
  //         }
  //       }
  //       partialMultiAssets.insert(policy, assets);
  //     }
  //     partialChange.set_multiasset(partialMultiAssets);
  //   };
  //   splitValue();
  //   const minAda = Loader.Cardano.min_ada_required(
  //     partialChange,
  //     protocolParameters.minUtxo
  //   );
  //   partialChange.set_coin(minAda);

  //   txBuilder.add_output(
  //     Loader.Cardano.TransactionOutput.new(
  //       Loader.Cardano.Address.from_bech32(account.paymentAddr),
  //       partialChange
  //     )
  //   );
  // }